version: '3.8'

services:
  # Test MongoDB
  mongodb-test:
    image: mongo:6.0
    container_name: samfms-mongodb-test
    ports:
      - '27018:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: testpassword
      MONGO_INITDB_DATABASE: samfms_test
    volumes:
      - mongodb_test_data:/data/db
      - ./scripts/init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js:ro
    networks:
      - samfms-test-network
    command: mongod --auth
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test RabbitMQ
  rabbitmq-test:
    image: rabbitmq:3.11-management
    container_name: samfms-rabbitmq-test
    ports:
      - '5673:5672'
      - '15673:15672'
    environment:
      RABBITMQ_DEFAULT_USER: testuser
      RABBITMQ_DEFAULT_PASS: testpassword
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_test_data:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - samfms-test-network
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Core Service
  core-test:
    build:
      context: ./Core
      dockerfile: Dockerfile
    container_name: samfms-core-test
    ports:
      - '8080:8000'
    environment:
      - ENVIRONMENT=test
      - MONGODB_URL=mongodb://root:testpassword@mongodb-test:27017/samfms_test?authSource=admin
      - RABBITMQ_HOST=rabbitmq-test
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=testuser
      - RABBITMQ_PASSWORD=testpassword
      - RABBITMQ_VHOST=/
      - JWT_SECRET=test-jwt-secret-key
      - LOG_LEVEL=DEBUG
      - MANAGEMENT_SERVICE_URL=http://management-test:8000
      - MAINTENANCE_SERVICE_URL=http://maintenance-test:8000
      - SECURITY_SERVICE_URL=http://security-test:8000
    depends_on:
      mongodb-test:
        condition: service_healthy
      rabbitmq-test:
        condition: service_healthy
    networks:
      - samfms-test-network
    volumes:
      - ./Core:/app
      - ./logs:/app/logs
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Management Service
  management-test:
    build:
      context: ./Sblocks/management
      dockerfile: Dockerfile
    container_name: samfms-management-test
    ports:
      - '8081:8000'
    environment:
      - ENVIRONMENT=test
      - MONGODB_URL=mongodb://root:testpassword@mongodb-test:27017/samfms_test?authSource=admin
      - RABBITMQ_HOST=rabbitmq-test
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=testuser
      - RABBITMQ_PASSWORD=testpassword
      - RABBITMQ_VHOST=/
      - JWT_SECRET=test-jwt-secret-key
      - LOG_LEVEL=DEBUG
      - CORE_SERVICE_URL=http://core-test:8000
    depends_on:
      mongodb-test:
        condition: service_healthy
      rabbitmq-test:
        condition: service_healthy
    networks:
      - samfms-test-network
    volumes:
      - ./Sblocks/management:/app
      - ./logs:/app/logs
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Maintenance Service
  maintenance-test:
    build:
      context: ./Sblocks/maintenance
      dockerfile: Dockerfile
    container_name: samfms-maintenance-test
    ports:
      - '8082:8000'
    environment:
      - ENVIRONMENT=test
      - MONGODB_URL=mongodb://root:testpassword@mongodb-test:27017/samfms_test?authSource=admin
      - RABBITMQ_HOST=rabbitmq-test
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=testuser
      - RABBITMQ_PASSWORD=testpassword
      - RABBITMQ_VHOST=/
      - JWT_SECRET=test-jwt-secret-key
      - LOG_LEVEL=DEBUG
      - CORE_SERVICE_URL=http://core-test:8000
    depends_on:
      mongodb-test:
        condition: service_healthy
      rabbitmq-test:
        condition: service_healthy
    networks:
      - samfms-test-network
    volumes:
      - ./Sblocks/maintenance:/app
      - ./logs:/app/logs
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Security Service
  security-test:
    build:
      context: ./Sblocks/security
      dockerfile: Dockerfile
    container_name: samfms-security-test
    ports:
      - '8083:8000'
    environment:
      - ENVIRONMENT=test
      - MONGODB_URL=mongodb://root:testpassword@mongodb-test:27017/samfms_test?authSource=admin
      - RABBITMQ_HOST=rabbitmq-test
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=testuser
      - RABBITMQ_PASSWORD=testpassword
      - RABBITMQ_VHOST=/
      - JWT_SECRET=test-jwt-secret-key
      - LOG_LEVEL=DEBUG
      - CORE_SERVICE_URL=http://core-test:8000
    depends_on:
      mongodb-test:
        condition: service_healthy
      rabbitmq-test:
        condition: service_healthy
    networks:
      - samfms-test-network
    volumes:
      - ./Sblocks/security:/app
      - ./logs:/app/logs
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  samfms-test-network:
    driver: bridge
    name: samfms-test-network

volumes:
  mongodb_test_data:
    name: samfms-mongodb-test-data
  rabbitmq_test_data:
    name: samfms-rabbitmq-test-data
