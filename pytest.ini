# SAMFMS Testing Configuration
# This file contains test configuration for all test suites

[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --junit-xml=test-results/pytest.xml
    --cov=Core
    --cov=Sblocks
    --cov-report=html:coverage-reports/html
    --cov-report=xml:coverage-reports/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=40

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    container: Container-based tests
    security: Security-related tests
    core: Core service tests
    management: Management service tests
    maintenance: Maintenance service tests
    slow: Slow running tests
    auth: Authentication tests
    api: API tests
    database: Database tests
    rabbitmq: RabbitMQ tests
    redis: Redis tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:httpx
    ignore::UserWarning:asyncio

# Asyncio configuration
asyncio_mode = auto


# Coverage configuration
[coverage:run]
source = Core, Sblocks
omit = 
    */tests/*
    */test_*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */alembic/*
    */scripts/*
    */docker/*
    */node_modules/*
    */static/*
    */templates/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    pass
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
precision = 2
sort = Cover

[coverage:html]
directory = coverage-reports/html
title = SAMFMS Test Coverage Report
