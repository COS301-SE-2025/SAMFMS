# Dockerfile for Integration Test Runner
# Combines Python and Node.js for running both backend and frontend integration tests

FROM python:3.11-slim

# Install Node.js and npm
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy Python requirements
COPY requirements.txt pyproject.toml pytest.ini ./
COPY tests/requirements.txt ./tests/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir -r tests/requirements.txt \
    && pip install --no-cache-dir pytest httpx

# Copy Frontend package files
COPY Frontend/samfms/package*.json ./Frontend/samfms/

# Install Frontend dependencies
RUN cd Frontend/samfms && npm ci --only=production

# Copy application code
COPY . .

# Create test results directory
RUN mkdir -p test-results

# Set default command
CMD ["echo", "Integration test runner ready. Use docker-compose to run tests."]